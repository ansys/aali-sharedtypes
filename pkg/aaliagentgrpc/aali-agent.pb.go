// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: pkg/aaliagentgrpc/aali-agent.proto

package aaliagentgrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ClientMessage is the message sent by the client to the server.
type ClientMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to MessageType:
	//
	//	*ClientMessage_SessionContext
	//	*ClientMessage_ClientRequest
	MessageType   isClientMessage_MessageType `protobuf_oneof:"message_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_pkg_aaliagentgrpc_aali_agent_proto_rawDescGZIP(), []int{0}
}

func (x *ClientMessage) GetMessageType() isClientMessage_MessageType {
	if x != nil {
		return x.MessageType
	}
	return nil
}

func (x *ClientMessage) GetSessionContext() *SessionContext {
	if x != nil {
		if x, ok := x.MessageType.(*ClientMessage_SessionContext); ok {
			return x.SessionContext
		}
	}
	return nil
}

func (x *ClientMessage) GetClientRequest() *ClientRequest {
	if x != nil {
		if x, ok := x.MessageType.(*ClientMessage_ClientRequest); ok {
			return x.ClientRequest
		}
	}
	return nil
}

type isClientMessage_MessageType interface {
	isClientMessage_MessageType()
}

type ClientMessage_SessionContext struct {
	// Session context message to initiate a session
	SessionContext *SessionContext `protobuf:"bytes,1,opt,name=session_context,json=sessionContext,proto3,oneof"`
}

type ClientMessage_ClientRequest struct {
	// Client request message to send a request to the server
	ClientRequest *ClientRequest `protobuf:"bytes,2,opt,name=client_request,json=clientRequest,proto3,oneof"`
}

func (*ClientMessage_SessionContext) isClientMessage_MessageType() {}

func (*ClientMessage_ClientRequest) isClientMessage_MessageType() {}

// ServerMessage is the message sent by the server to the client.
type ServerMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to MessageType:
	//
	//	*ServerMessage_ConnectionStatus
	//	*ServerMessage_AuthenticationStatus
	//	*ServerMessage_ClientResponse
	MessageType   isServerMessage_MessageType `protobuf_oneof:"message_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_pkg_aaliagentgrpc_aali_agent_proto_rawDescGZIP(), []int{1}
}

func (x *ServerMessage) GetMessageType() isServerMessage_MessageType {
	if x != nil {
		return x.MessageType
	}
	return nil
}

func (x *ServerMessage) GetConnectionStatus() *ConnectionStatus {
	if x != nil {
		if x, ok := x.MessageType.(*ServerMessage_ConnectionStatus); ok {
			return x.ConnectionStatus
		}
	}
	return nil
}

func (x *ServerMessage) GetAuthenticationStatus() *AuthenticationStatus {
	if x != nil {
		if x, ok := x.MessageType.(*ServerMessage_AuthenticationStatus); ok {
			return x.AuthenticationStatus
		}
	}
	return nil
}

func (x *ServerMessage) GetClientResponse() *ClientResponse {
	if x != nil {
		if x, ok := x.MessageType.(*ServerMessage_ClientResponse); ok {
			return x.ClientResponse
		}
	}
	return nil
}

type isServerMessage_MessageType interface {
	isServerMessage_MessageType()
}

type ServerMessage_ConnectionStatus struct {
	// Connection status message to indicate the connection status after client sends a session context message
	ConnectionStatus *ConnectionStatus `protobuf:"bytes,1,opt,name=connection_status,json=connectionStatus,proto3,oneof"`
}

type ServerMessage_AuthenticationStatus struct {
	// Authentication status message to indicate failing authentication after client sends a session context message with authentication enabled
	AuthenticationStatus *AuthenticationStatus `protobuf:"bytes,2,opt,name=authentication_status,json=authenticationStatus,proto3,oneof"`
}

type ServerMessage_ClientResponse struct {
	// Client response message to send a response to the client
	ClientResponse *ClientResponse `protobuf:"bytes,3,opt,name=client_response,json=clientResponse,proto3,oneof"`
}

func (*ServerMessage_ConnectionStatus) isServerMessage_MessageType() {}

func (*ServerMessage_AuthenticationStatus) isServerMessage_MessageType() {}

func (*ServerMessage_ClientResponse) isServerMessage_MessageType() {}

// SessionContext is the message to initiate a session with the server.
type SessionContext struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JWT token for authentication
	JwtToken string `protobuf:"bytes,1,opt,name=jwt_token,json=jwtToken,proto3" json:"jwt_token,omitempty"`
	// Workflow ID for the workflow to be run
	WorkflowId string `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	// Variables to be passed to the workflow
	Variables map[string]string `protobuf:"bytes,3,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Snapshot ID; if defined, the given snapshot will retrived from the database
	SnapshotId string `protobuf:"bytes,4,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	// Workflow run ID; mandatory if "snapshot_id" is defined in order to retrieve the snapshot from the database
	WorkflowRunId string `protobuf:"bytes,5,opt,name=workflow_run_id,json=workflowRunId,proto3" json:"workflow_run_id,omitempty"`
	// User ID; mandatory if "snapshot_id" is defined in order to retrieve the snapshot from the database
	UserId string `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Store snapshots; if true, all taken snapshots will be stored in the database
	StoreSnapshots bool `protobuf:"varint,7,opt,name=store_snapshots,json=storeSnapshots,proto3" json:"store_snapshots,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SessionContext) Reset() {
	*x = SessionContext{}
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionContext) ProtoMessage() {}

func (x *SessionContext) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionContext.ProtoReflect.Descriptor instead.
func (*SessionContext) Descriptor() ([]byte, []int) {
	return file_pkg_aaliagentgrpc_aali_agent_proto_rawDescGZIP(), []int{2}
}

func (x *SessionContext) GetJwtToken() string {
	if x != nil {
		return x.JwtToken
	}
	return ""
}

func (x *SessionContext) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *SessionContext) GetVariables() map[string]string {
	if x != nil {
		return x.Variables
	}
	return nil
}

func (x *SessionContext) GetSnapshotId() string {
	if x != nil {
		return x.SnapshotId
	}
	return ""
}

func (x *SessionContext) GetWorkflowRunId() string {
	if x != nil {
		return x.WorkflowRunId
	}
	return ""
}

func (x *SessionContext) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SessionContext) GetStoreSnapshots() bool {
	if x != nil {
		return x.StoreSnapshots
	}
	return false
}

// ClientRequest is the message to send a request to the server.
type ClientRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Instruction ID which has to be equal to the instruction ID of the client response for chat interface interaction
	InstructionId string `protobuf:"bytes,1,opt,name=instruction_id,json=instructionId,proto3" json:"instruction_id,omitempty"`
	// Type of the request; can be "message", "get_variable_values", "set_variable_values", "keepalive", "take_snapshot", "load_snapshot", "get_slash_commands", "feedback"
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// String input for chat interface interaction
	Input string `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	// Image input for chat interface interaction
	Images []string `protobuf:"bytes,4,rep,name=images,proto3" json:"images,omitempty"`
	// Variable values to be set for the workflow
	VariableValues map[string]string `protobuf:"bytes,5,rep,name=variable_values,json=variableValues,proto3" json:"variable_values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// ID of the snapshot to be loaded
	SnapshotId string `protobuf:"bytes,6,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	// Feedback for the workflow run
	Feedback      *WorkflowFeedback `protobuf:"bytes,7,opt,name=feedback,proto3" json:"feedback,omitempty"` // Feedback for the workflow run
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientRequest) Reset() {
	*x = ClientRequest{}
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRequest) ProtoMessage() {}

func (x *ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRequest.ProtoReflect.Descriptor instead.
func (*ClientRequest) Descriptor() ([]byte, []int) {
	return file_pkg_aaliagentgrpc_aali_agent_proto_rawDescGZIP(), []int{3}
}

func (x *ClientRequest) GetInstructionId() string {
	if x != nil {
		return x.InstructionId
	}
	return ""
}

func (x *ClientRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ClientRequest) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *ClientRequest) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ClientRequest) GetVariableValues() map[string]string {
	if x != nil {
		return x.VariableValues
	}
	return nil
}

func (x *ClientRequest) GetSnapshotId() string {
	if x != nil {
		return x.SnapshotId
	}
	return ""
}

func (x *ClientRequest) GetFeedback() *WorkflowFeedback {
	if x != nil {
		return x.Feedback
	}
	return nil
}

// WorkflowFeedback is the message to send feedback to the server.
type WorkflowFeedback struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Message ID which has to be equal to the message ID in the conversation history for which the feedback is given
	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// Positive or negative feedback can either be added or removed to the message ID in the conversation history
	AddPositive    bool `protobuf:"varint,2,opt,name=add_positive,json=addPositive,proto3" json:"add_positive,omitempty"`
	AddNegative    bool `protobuf:"varint,3,opt,name=add_negative,json=addNegative,proto3" json:"add_negative,omitempty"`
	RemovePositive bool `protobuf:"varint,4,opt,name=remove_positive,json=removePositive,proto3" json:"remove_positive,omitempty"`
	RemoveNegative bool `protobuf:"varint,5,opt,name=remove_negative,json=removeNegative,proto3" json:"remove_negative,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorkflowFeedback) Reset() {
	*x = WorkflowFeedback{}
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkflowFeedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowFeedback) ProtoMessage() {}

func (x *WorkflowFeedback) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowFeedback.ProtoReflect.Descriptor instead.
func (*WorkflowFeedback) Descriptor() ([]byte, []int) {
	return file_pkg_aaliagentgrpc_aali_agent_proto_rawDescGZIP(), []int{4}
}

func (x *WorkflowFeedback) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *WorkflowFeedback) GetAddPositive() bool {
	if x != nil {
		return x.AddPositive
	}
	return false
}

func (x *WorkflowFeedback) GetAddNegative() bool {
	if x != nil {
		return x.AddNegative
	}
	return false
}

func (x *WorkflowFeedback) GetRemovePositive() bool {
	if x != nil {
		return x.RemovePositive
	}
	return false
}

func (x *WorkflowFeedback) GetRemoveNegative() bool {
	if x != nil {
		return x.RemoveNegative
	}
	return false
}

// ConnectionStatus is the message to indicate the connection status after client sends a session context message.
type ConnectionStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Connection status; can be "success", "failed"
	ConnectionStatus string `protobuf:"bytes,1,opt,name=connectionStatus,proto3" json:"connectionStatus,omitempty"`
	// Workflow Run ID; if the connection status is "success", this will be the ID of the workflow run
	WorkflowRunId string `protobuf:"bytes,2,opt,name=workflow_run_id,json=workflowRunId,proto3" json:"workflow_run_id,omitempty"`
	// Maximum number of snapshots that can be stored in the database per workflow run
	MaxNumberOfSnapshots int32 `protobuf:"varint,3,opt,name=max_number_of_snapshots,json=maxNumberOfSnapshots,proto3" json:"max_number_of_snapshots,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ConnectionStatus) Reset() {
	*x = ConnectionStatus{}
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionStatus) ProtoMessage() {}

func (x *ConnectionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionStatus.ProtoReflect.Descriptor instead.
func (*ConnectionStatus) Descriptor() ([]byte, []int) {
	return file_pkg_aaliagentgrpc_aali_agent_proto_rawDescGZIP(), []int{5}
}

func (x *ConnectionStatus) GetConnectionStatus() string {
	if x != nil {
		return x.ConnectionStatus
	}
	return ""
}

func (x *ConnectionStatus) GetWorkflowRunId() string {
	if x != nil {
		return x.WorkflowRunId
	}
	return ""
}

func (x *ConnectionStatus) GetMaxNumberOfSnapshots() int32 {
	if x != nil {
		return x.MaxNumberOfSnapshots
	}
	return 0
}

// AuthenticationStatus is the message to indicate failing authentication after client sends a session context message with authentication enabled.
type AuthenticationStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Authentication status; can only be "failed"
	AuthenticationStatus string `protobuf:"bytes,1,opt,name=authenticationStatus,proto3" json:"authenticationStatus,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AuthenticationStatus) Reset() {
	*x = AuthenticationStatus{}
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationStatus) ProtoMessage() {}

func (x *AuthenticationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationStatus.ProtoReflect.Descriptor instead.
func (*AuthenticationStatus) Descriptor() ([]byte, []int) {
	return file_pkg_aaliagentgrpc_aali_agent_proto_rawDescGZIP(), []int{6}
}

func (x *AuthenticationStatus) GetAuthenticationStatus() string {
	if x != nil {
		return x.AuthenticationStatus
	}
	return ""
}

// ClientResponse is the message to send a response to the client.
type ClientResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Randomly generated instruction ID to be used in the client request
	InstructionId string `protobuf:"bytes,1,opt,name=instruction_id,json=instructionId,proto3" json:"instruction_id,omitempty"`
	// Type of the response; can be "message", "stream", "info_message", "info_stream", "error", "info", "varaible_values", "snapshot_taken", "snapshot_loaded", "slash_commands", "feedback_received"
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Chat Interface properties
	IsLast           bool   `protobuf:"varint,3,opt,name=is_last,json=isLast,proto3" json:"is_last,omitempty"`
	Position         uint32 `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	ChatData         string `protobuf:"bytes,5,opt,name=chat_data,json=chatData,proto3" json:"chat_data,omitempty"`
	CodeValidation   string `protobuf:"bytes,6,opt,name=code_validation,json=codeValidation,proto3" json:"code_validation,omitempty"` // "unvalidated", "valid", "warning", "invalid"
	InputTokenCount  int32  `protobuf:"varint,7,opt,name=input_token_count,json=inputTokenCount,proto3" json:"input_token_count,omitempty"`
	OutputTokenCount int32  `protobuf:"varint,8,opt,name=output_token_count,json=outputTokenCount,proto3" json:"output_token_count,omitempty"`
	Context          string `protobuf:"bytes,9,opt,name=context,proto3" json:"context,omitempty"`
	// Variable values properties
	VariableValues map[string]string `protobuf:"bytes,10,rep,name=variable_values,json=variableValues,proto3" json:"variable_values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Snapshot properties; id of the snapshot taken or loaded
	SnapshotId string `protobuf:"bytes,11,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`
	// Slash command properties; dictonary of @ commands and their corresponding slash commands
	SlashCommands map[string]*StringList `protobuf:"bytes,12,rep,name=slash_commands,json=slashCommands,proto3" json:"slash_commands,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Error properties
	Error *ErrorResponse `protobuf:"bytes,13,opt,name=error,proto3" json:"error,omitempty"`
	// Info properties
	InfoMessage   *string `protobuf:"bytes,14,opt,name=info_message,json=infoMessage,proto3,oneof" json:"info_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientResponse) Reset() {
	*x = ClientResponse{}
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientResponse) ProtoMessage() {}

func (x *ClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientResponse.ProtoReflect.Descriptor instead.
func (*ClientResponse) Descriptor() ([]byte, []int) {
	return file_pkg_aaliagentgrpc_aali_agent_proto_rawDescGZIP(), []int{7}
}

func (x *ClientResponse) GetInstructionId() string {
	if x != nil {
		return x.InstructionId
	}
	return ""
}

func (x *ClientResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ClientResponse) GetIsLast() bool {
	if x != nil {
		return x.IsLast
	}
	return false
}

func (x *ClientResponse) GetPosition() uint32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *ClientResponse) GetChatData() string {
	if x != nil {
		return x.ChatData
	}
	return ""
}

func (x *ClientResponse) GetCodeValidation() string {
	if x != nil {
		return x.CodeValidation
	}
	return ""
}

func (x *ClientResponse) GetInputTokenCount() int32 {
	if x != nil {
		return x.InputTokenCount
	}
	return 0
}

func (x *ClientResponse) GetOutputTokenCount() int32 {
	if x != nil {
		return x.OutputTokenCount
	}
	return 0
}

func (x *ClientResponse) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *ClientResponse) GetVariableValues() map[string]string {
	if x != nil {
		return x.VariableValues
	}
	return nil
}

func (x *ClientResponse) GetSnapshotId() string {
	if x != nil {
		return x.SnapshotId
	}
	return ""
}

func (x *ClientResponse) GetSlashCommands() map[string]*StringList {
	if x != nil {
		return x.SlashCommands
	}
	return nil
}

func (x *ClientResponse) GetError() *ErrorResponse {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ClientResponse) GetInfoMessage() string {
	if x != nil && x.InfoMessage != nil {
		return *x.InfoMessage
	}
	return ""
}

// StringList is a message to hold a list of strings.
type StringList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of strings
	Values        []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringList) Reset() {
	*x = StringList{}
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringList) ProtoMessage() {}

func (x *StringList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringList.ProtoReflect.Descriptor instead.
func (*StringList) Descriptor() ([]byte, []int) {
	return file_pkg_aaliagentgrpc_aali_agent_proto_rawDescGZIP(), []int{8}
}

func (x *StringList) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

// ErrorResponse is the message to send an error response to the client.
type ErrorResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Error code
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Error message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_pkg_aaliagentgrpc_aali_agent_proto_rawDescGZIP(), []int{9}
}

func (x *ErrorResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pkg_aaliagentgrpc_aali_agent_proto protoreflect.FileDescriptor

const file_pkg_aaliagentgrpc_aali_agent_proto_rawDesc = "" +
	"\n" +
	"\"pkg/aaliagentgrpc/aali-agent.proto\x12\raaliagentgrpc\"\xb0\x01\n" +
	"\rClientMessage\x12H\n" +
	"\x0fsession_context\x18\x01 \x01(\v2\x1d.aaliagentgrpc.SessionContextH\x00R\x0esessionContext\x12E\n" +
	"\x0eclient_request\x18\x02 \x01(\v2\x1c.aaliagentgrpc.ClientRequestH\x00R\rclientRequestB\x0e\n" +
	"\fmessage_type\"\x95\x02\n" +
	"\rServerMessage\x12N\n" +
	"\x11connection_status\x18\x01 \x01(\v2\x1f.aaliagentgrpc.ConnectionStatusH\x00R\x10connectionStatus\x12Z\n" +
	"\x15authentication_status\x18\x02 \x01(\v2#.aaliagentgrpc.AuthenticationStatusH\x00R\x14authenticationStatus\x12H\n" +
	"\x0fclient_response\x18\x03 \x01(\v2\x1d.aaliagentgrpc.ClientResponseH\x00R\x0eclientResponseB\x0e\n" +
	"\fmessage_type\"\xe3\x02\n" +
	"\x0eSessionContext\x12\x1b\n" +
	"\tjwt_token\x18\x01 \x01(\tR\bjwtToken\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12J\n" +
	"\tvariables\x18\x03 \x03(\v2,.aaliagentgrpc.SessionContext.VariablesEntryR\tvariables\x12\x1f\n" +
	"\vsnapshot_id\x18\x04 \x01(\tR\n" +
	"snapshotId\x12&\n" +
	"\x0fworkflow_run_id\x18\x05 \x01(\tR\rworkflowRunId\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\tR\x06userId\x12'\n" +
	"\x0fstore_snapshots\x18\a \x01(\bR\x0estoreSnapshots\x1a<\n" +
	"\x0eVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf4\x02\n" +
	"\rClientRequest\x12%\n" +
	"\x0einstruction_id\x18\x01 \x01(\tR\rinstructionId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x14\n" +
	"\x05input\x18\x03 \x01(\tR\x05input\x12\x16\n" +
	"\x06images\x18\x04 \x03(\tR\x06images\x12Y\n" +
	"\x0fvariable_values\x18\x05 \x03(\v20.aaliagentgrpc.ClientRequest.VariableValuesEntryR\x0evariableValues\x12\x1f\n" +
	"\vsnapshot_id\x18\x06 \x01(\tR\n" +
	"snapshotId\x12;\n" +
	"\bfeedback\x18\a \x01(\v2\x1f.aaliagentgrpc.WorkflowFeedbackR\bfeedback\x1aA\n" +
	"\x13VariableValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc9\x01\n" +
	"\x10WorkflowFeedback\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12!\n" +
	"\fadd_positive\x18\x02 \x01(\bR\vaddPositive\x12!\n" +
	"\fadd_negative\x18\x03 \x01(\bR\vaddNegative\x12'\n" +
	"\x0fremove_positive\x18\x04 \x01(\bR\x0eremovePositive\x12'\n" +
	"\x0fremove_negative\x18\x05 \x01(\bR\x0eremoveNegative\"\x9d\x01\n" +
	"\x10ConnectionStatus\x12*\n" +
	"\x10connectionStatus\x18\x01 \x01(\tR\x10connectionStatus\x12&\n" +
	"\x0fworkflow_run_id\x18\x02 \x01(\tR\rworkflowRunId\x125\n" +
	"\x17max_number_of_snapshots\x18\x03 \x01(\x05R\x14maxNumberOfSnapshots\"J\n" +
	"\x14AuthenticationStatus\x122\n" +
	"\x14authenticationStatus\x18\x01 \x01(\tR\x14authenticationStatus\"\x9d\x06\n" +
	"\x0eClientResponse\x12%\n" +
	"\x0einstruction_id\x18\x01 \x01(\tR\rinstructionId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x17\n" +
	"\ais_last\x18\x03 \x01(\bR\x06isLast\x12\x1a\n" +
	"\bposition\x18\x04 \x01(\rR\bposition\x12\x1b\n" +
	"\tchat_data\x18\x05 \x01(\tR\bchatData\x12'\n" +
	"\x0fcode_validation\x18\x06 \x01(\tR\x0ecodeValidation\x12*\n" +
	"\x11input_token_count\x18\a \x01(\x05R\x0finputTokenCount\x12,\n" +
	"\x12output_token_count\x18\b \x01(\x05R\x10outputTokenCount\x12\x18\n" +
	"\acontext\x18\t \x01(\tR\acontext\x12Z\n" +
	"\x0fvariable_values\x18\n" +
	" \x03(\v21.aaliagentgrpc.ClientResponse.VariableValuesEntryR\x0evariableValues\x12\x1f\n" +
	"\vsnapshot_id\x18\v \x01(\tR\n" +
	"snapshotId\x12W\n" +
	"\x0eslash_commands\x18\f \x03(\v20.aaliagentgrpc.ClientResponse.SlashCommandsEntryR\rslashCommands\x122\n" +
	"\x05error\x18\r \x01(\v2\x1c.aaliagentgrpc.ErrorResponseR\x05error\x12&\n" +
	"\finfo_message\x18\x0e \x01(\tH\x00R\vinfoMessage\x88\x01\x01\x1aA\n" +
	"\x13VariableValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a[\n" +
	"\x12SlashCommandsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.aaliagentgrpc.StringListR\x05value:\x028\x01B\x0f\n" +
	"\r_info_message\"$\n" +
	"\n" +
	"StringList\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\"=\n" +
	"\rErrorResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2^\n" +
	"\vWorkflowRun\x12O\n" +
	"\vRunWorkflow\x12\x1c.aaliagentgrpc.ClientMessage\x1a\x1c.aaliagentgrpc.ServerMessage\"\x00(\x010\x01B\x11Z\x0f./aaliagentgrpcb\x06proto3"

var (
	file_pkg_aaliagentgrpc_aali_agent_proto_rawDescOnce sync.Once
	file_pkg_aaliagentgrpc_aali_agent_proto_rawDescData []byte
)

func file_pkg_aaliagentgrpc_aali_agent_proto_rawDescGZIP() []byte {
	file_pkg_aaliagentgrpc_aali_agent_proto_rawDescOnce.Do(func() {
		file_pkg_aaliagentgrpc_aali_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_aaliagentgrpc_aali_agent_proto_rawDesc), len(file_pkg_aaliagentgrpc_aali_agent_proto_rawDesc)))
	})
	return file_pkg_aaliagentgrpc_aali_agent_proto_rawDescData
}

var file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_pkg_aaliagentgrpc_aali_agent_proto_goTypes = []any{
	(*ClientMessage)(nil),        // 0: aaliagentgrpc.ClientMessage
	(*ServerMessage)(nil),        // 1: aaliagentgrpc.ServerMessage
	(*SessionContext)(nil),       // 2: aaliagentgrpc.SessionContext
	(*ClientRequest)(nil),        // 3: aaliagentgrpc.ClientRequest
	(*WorkflowFeedback)(nil),     // 4: aaliagentgrpc.WorkflowFeedback
	(*ConnectionStatus)(nil),     // 5: aaliagentgrpc.ConnectionStatus
	(*AuthenticationStatus)(nil), // 6: aaliagentgrpc.AuthenticationStatus
	(*ClientResponse)(nil),       // 7: aaliagentgrpc.ClientResponse
	(*StringList)(nil),           // 8: aaliagentgrpc.StringList
	(*ErrorResponse)(nil),        // 9: aaliagentgrpc.ErrorResponse
	nil,                          // 10: aaliagentgrpc.SessionContext.VariablesEntry
	nil,                          // 11: aaliagentgrpc.ClientRequest.VariableValuesEntry
	nil,                          // 12: aaliagentgrpc.ClientResponse.VariableValuesEntry
	nil,                          // 13: aaliagentgrpc.ClientResponse.SlashCommandsEntry
}
var file_pkg_aaliagentgrpc_aali_agent_proto_depIdxs = []int32{
	2,  // 0: aaliagentgrpc.ClientMessage.session_context:type_name -> aaliagentgrpc.SessionContext
	3,  // 1: aaliagentgrpc.ClientMessage.client_request:type_name -> aaliagentgrpc.ClientRequest
	5,  // 2: aaliagentgrpc.ServerMessage.connection_status:type_name -> aaliagentgrpc.ConnectionStatus
	6,  // 3: aaliagentgrpc.ServerMessage.authentication_status:type_name -> aaliagentgrpc.AuthenticationStatus
	7,  // 4: aaliagentgrpc.ServerMessage.client_response:type_name -> aaliagentgrpc.ClientResponse
	10, // 5: aaliagentgrpc.SessionContext.variables:type_name -> aaliagentgrpc.SessionContext.VariablesEntry
	11, // 6: aaliagentgrpc.ClientRequest.variable_values:type_name -> aaliagentgrpc.ClientRequest.VariableValuesEntry
	4,  // 7: aaliagentgrpc.ClientRequest.feedback:type_name -> aaliagentgrpc.WorkflowFeedback
	12, // 8: aaliagentgrpc.ClientResponse.variable_values:type_name -> aaliagentgrpc.ClientResponse.VariableValuesEntry
	13, // 9: aaliagentgrpc.ClientResponse.slash_commands:type_name -> aaliagentgrpc.ClientResponse.SlashCommandsEntry
	9,  // 10: aaliagentgrpc.ClientResponse.error:type_name -> aaliagentgrpc.ErrorResponse
	8,  // 11: aaliagentgrpc.ClientResponse.SlashCommandsEntry.value:type_name -> aaliagentgrpc.StringList
	0,  // 12: aaliagentgrpc.WorkflowRun.RunWorkflow:input_type -> aaliagentgrpc.ClientMessage
	1,  // 13: aaliagentgrpc.WorkflowRun.RunWorkflow:output_type -> aaliagentgrpc.ServerMessage
	13, // [13:14] is the sub-list for method output_type
	12, // [12:13] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_pkg_aaliagentgrpc_aali_agent_proto_init() }
func file_pkg_aaliagentgrpc_aali_agent_proto_init() {
	if File_pkg_aaliagentgrpc_aali_agent_proto != nil {
		return
	}
	file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[0].OneofWrappers = []any{
		(*ClientMessage_SessionContext)(nil),
		(*ClientMessage_ClientRequest)(nil),
	}
	file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[1].OneofWrappers = []any{
		(*ServerMessage_ConnectionStatus)(nil),
		(*ServerMessage_AuthenticationStatus)(nil),
		(*ServerMessage_ClientResponse)(nil),
	}
	file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_aaliagentgrpc_aali_agent_proto_rawDesc), len(file_pkg_aaliagentgrpc_aali_agent_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_aaliagentgrpc_aali_agent_proto_goTypes,
		DependencyIndexes: file_pkg_aaliagentgrpc_aali_agent_proto_depIdxs,
		MessageInfos:      file_pkg_aaliagentgrpc_aali_agent_proto_msgTypes,
	}.Build()
	File_pkg_aaliagentgrpc_aali_agent_proto = out.File
	file_pkg_aaliagentgrpc_aali_agent_proto_goTypes = nil
	file_pkg_aaliagentgrpc_aali_agent_proto_depIdxs = nil
}
