name: aali-graphdb go client tests
on:
  workflow_call:
  workflow_dispatch:
    inputs:
      image_name:
        type: string
        description: The name of the `aali-graphdb` image to run the unit tests against
        required: false
        default: ghcr.io/ansys/aali-graphdb:edge

jobs:
  # build the matrix for the unit tests, whether this was called via workflow dispatch or not
  #
  # We'll always run 2 versions of each test suite, once with API key auth enabled, and another
  # without.
  get-test-matrix:
    runs-on: ubuntu-latest
    outputs:
      MATRIX: ${{ steps.build-matrix.outputs.MATRIX }}
    steps:
      - if: ${{ github.event_name == 'workflow_dispatch' }}
        run: echo "IMAGE_NAMES=[\"${{ inputs.image_name }}\"]" | tee -a "$GITHUB_ENV"
      - if: ${{ github.event_name != 'workflow_dispatch' }}
        run: echo "IMAGE_NAMES=[\"ghcr.io/ansys/aali-graphdb:edge\", \"ghcr.io/ansys/aali-graphdb:latest\", \"ghcr.io/ansys/aali-graphdb:v1.0.0\"]" | tee -a "$GITHUB_ENV"
      - id: build-matrix
        run: |
          matrix=$(echo "$IMAGE_NAMES" | jq -c "[{image: .[], api_key: true}, {image: .[], api_key: false}]")
          echo "MATRIX=$matrix" | tee -a "$GITHUB_OUTPUT"

  unit-tests:
    runs-on: ubuntu-latest
    needs: get-test-matrix
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.get-test-matrix.outputs.MATRIX) }}
    env:
      REGISTRY: ghcr.io
      GOPROXY: https://proxy.golang.org,direct # fallback to direct fetching when proxy fails
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          password: ${{ secrets.PYANSYS_CI_BOT_PACKAGE_TOKEN }}
      - run: docker pull ${{ matrix.image }}
      - run: |
          if [ "${{ matrix.api_key }}" = "true" ]; then
            apikey=$(openssl rand -base64 36)
          else
            apikey=""
          fi
          go test -v ./pkg/aali_graphdb/... -imagename "${{ matrix.image }}" -apikey "$apikey"
